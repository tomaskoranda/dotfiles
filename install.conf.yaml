# install.conf.yaml
# documentation: https://github.com/anishathalye/dotbot#configuration
# gow to run: https://github.com/anishathalye/dotbot#command-line-arguments
# - `./install --only/except [list of directives]`

# Dotbot can:
# - link files and folders
# - create folders
# - execute shell commands
# - and clean directories of broken symbolic links
# - (user plugins for custom commands)

# `Defaults` command
# - options to apply to all commands that come after setting the defaults
# - can be set multiple times, each change replaces the defaults with a new set of options

# `Link` command
# - https://github.com/anishathalye/dotbot#link
# - specify how files and directories should be symbolically linked

# `Create` command
# - https://github.com/anishathalye/dotbot#create
# - specify empty directories to be created

# `Shell` command
# - https://github.com/anishathalye/dotbot#shell
# - specify shell commands to be run
# - commands are run in the base directory (i.e. specified by running the installer)

# `Clean` command
# - https://github.com/anishathalye/dotbot#clean
# - specify directories that should be checked for dead symbolic links, for automatic removal

################################################################################
# 0. Set Defaults
- defaults:
    create:
      mode: 0700    # "drwx------"
    
    shell:
      quiet:  false # Show only the description but not the command
      stdin:  false # Allow a command to read from standard input
      stdout: true  # Show a command's output from stdout
      stderr: true  # Show a command's error output from stderr

################################################################################
# 1. Create Folder Structure
- create:
    - ~/.ssh
    - ~/Dev
    - ~/Dev/University
    - ~/Dev/Personal
    - ~/Dev/Work
################################################################################
# 2. macOS setup
- shell:
    # # Example
    # - command: read var && echo Your variable is $var
    #   description: Reading and printing variable example
    #   stdin: true

    # Developer Tools
    - command: xcode-select --print-path || xcode-select --install
      description: |
        Install Xcode Command Line Tools (not Xcode IDE), if not installed already.
        (Xcode Command Line Tools are essentially BSD cli utilities + macOS SDK)

    # OS update
    - command: sudo softwareupdate --install --all --verbose
      description: Update macOS and Safari
      stdin: true

    # x86 arm translation
    - command: sudo softwareupdate --install-rosetta --agree-to-license
      description: Install Roseta2 (x86 to arm translation layer)
      stdin: true

    # Xcode Licence
    # - command: sudo xcodebuild -license accept
    #   description: Accept Xcode licence agreement
    #   stdin: true
################################################################################
